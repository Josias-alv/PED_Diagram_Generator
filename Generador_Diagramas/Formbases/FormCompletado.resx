<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>