<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>