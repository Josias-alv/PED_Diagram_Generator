<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>